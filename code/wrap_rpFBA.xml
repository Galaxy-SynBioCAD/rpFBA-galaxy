<tool id="rpFBA" name="FBA" version="0.1">
	<description>Perform FBA for the RetroPath2.0 heterologous pathways</description>
  <requirements>
    <container type="docker">brsynth/rpfba-standalone:v2</container>
  </requirements>
  <stdio>
    <regex match="WARNING" level="warning" />
    <regex match="ERROR" level="error" />
  </stdio>
  <command detect_errors="exit_code"><![CDATA[
		'$__tool_directory__/tool_rpFBA.py' -input '$format_type.input' -output '$output' -gem_sbml '$gem_sbml' -dont_merge '$adv.dont_merge' -pathway_id '$adv.pathway_id' -objective_id '$adv.objective_id' -compartment_id '$adv.compartment_id' -target_reaction '$input_sim_type.target_reaction' -target_coefficient '$input_sim_type.target_coefficient' -sim_type '$input_sim_type.sim_type' -is_max '$adv.is_max' -input_format '$format_type.input_format'
		#if str($input_sim_type.sim_type)=="fraction"
			-source_coefficient '$input_sim_type.source_coefficient'
			-source_reaction '$input_sim_type.source_reaction'
			-fraction_of '$input_sim_type.fraction_of' 
		#end if
		#if str($input_sim_type.sim_type)=="pfba"
			-source_coefficient 0
			-source_reaction ''
			-fraction_of '$input_sim_type.fraction_of' 
		#end if
		#if str($input_sim_type.sim_type)=="pfba"
			-source_coefficient 0
			-source_reaction ''
			-fraction_of '$input_sim_type.fraction_of' 
		#end if
		#if str($input_sim_type.sim_type)=="fba"
			-source_coefficient 0
			-source_reaction ''
			-fraction_of 0.0
		#end if
  ]]></command>
  <inputs>
    <conditional name="input_sim_type">
      <param name="sim_type" type="select" label="Constraint based simulation type">
        <option value="fraction" type="text" selected="true">Fraction of Reaction</option>
        <option value="fba" type="text">FBA</option>
        <option value="pfba" type="text">Parsimonious FBA</option>
      </param>
			<when value="fraction">
				<param name="fraction_of" type="float" value="0.75" label="Fraction of the source reaction" />
				<param name="target_reaction" type="text" value="RP1_sink" label="Target reaction" />
				<param name="source_coefficient" type="float" value="1.0" label="Target coefficient" />
				<param name="source_reaction" type="text" value="biomass" label="Source reaction" />
				<param name="target_coefficient" type="float" value="1.0" label="Source coefficient" />
			</when>	
			<when value="pfba">
				<param name="fraction_of" type="float" value="0.95" label="Fraction of optimal" />
				<param name="target_reaction" type="text" value="RP1_sink" label="Target reaction" />
				<param name="target_coefficient" type="float" value="1.0" label="Target coefficient" />
			</when>	
			<when value="fba">
				<param name="target_reaction" type="text" value="RP1_sink" label="Target reaction" />
				<param name="target_coefficient" type="float" value="1.0" label="Target coefficient" />
			</when>	
    </conditional>
    <conditional name="format_type">
      <param name="input_format" type="select" label="Input/output format">
        <option value="tar" type="text" selected="True">TAR</option>
        <option value="sbml" type="text" >SBML</option>
      </param>
      <when value="tar">
        <param name="input" type="data" format="tar" label="Input file" />
      </when>
      <when value="sbml">
        <param name="input" type="data" format="sbml" label="Input file" />
      </when>
    </conditional>
		<param name="gem_sbml" type="data" format="sbml" label="Input GEM SBML model" />
		<section name="adv" title="Advanced Options" expanded="false">
			<param name="pathway_id" type="text" value="rp_pathway" label="Name of the heterologous pathway" />
			<param name="objective_id" type="text" value="None" label="Overwrite default given objective ID" />
			<param name="is_max" type="boolean" truevalue="True" falsevalue="False" checked="true" label="Maximise the objective?" />
			<param name="dont_merge" type="boolean" truevalue="True" falsevalue="False" checked="true" label="Don't output the merged model?" />
			<param name="compartment_id" type="text" value="MNXC3" label="SBML compartment ID" />
		</section>
  </inputs>
  <outputs>
    <data name="output" format="tar" label="FBA" >
			<change_format>
				<when input="format_type.input_format" value="sbml" format="sbml"/>
      </change_format>
		</data>
  </outputs>
  <help><![CDATA[
FBA
=====


Flux balance analysis is a mathematical approach for analyzing the flow of metabolites through a metabolic network. It is performed for heterologous pathways generated by RetroPath2.0. The tool performs the following steps:

- Merges a user-defined GEM SBML model with each given heterologous pathway individually.  
- Performs FBA using the CobraPy package. Three different analysis methods are proposed; two of which are native CobraPy methods - standard FBA and Parsimonious FBA, the other one proposed is an in-house analysis method named "Fraction of Reaction". 

The "Fraction of Reaction" method involves performing FBA using the "Source Reaction" as the objective function (by default the biomass reaction is specified, which refers to the rate at which all of the biomass precursors are made in the correct proportions). Then the flux of that reaction has its upper and lower bounds set to the same value, determined as a "Fraction of the source reaction" (default is 75% of its optimum). Thereafter, the objective is set to the target reaction followed by performing FBA once again. The tool uses the FBC package to manage the objective and flux bounds. 
For the first two, the user must specify the name(s) of reaction(s) that the model will optimize to, while for the latter the user must provide the target reaction but also another source reaction that will be restricted. 
Using the Advanced Options, the user can specify the name of the heterologous pathway as created by "Pathways to SBML" and the compartment ID of the heterologous pathway. The user may obtain a merged version of the resulting model, or the heterologous pathway only using the "Don't output the merged model" boolean parameter. Using the "Maximize the Objective?", the user may choose to maximize or minimize the objective (biomass production in this case) in the model.


.. image:: https://raw.githubusercontent.com/Galaxy-SynBioCAD/rpFBA/standalone/galaxy/img/rpFBA.png
	:width: 60 %
	:align: center

|

The above figure illustrates the steps in the tool's calculation of FBA. The pathway is merged with a GEM SBML model and using the FBC package and CobraPy FBA is performed and the fluxes saved to the SBML file.

Input
-----

Required:


* **-input**\ : (string) Path to the input file
* **-input_format**\ : (string) Valid options: tar, sbml. Format of the input file
* **-full_sbml**\ : (string) Path to the GEM SBML model

Advanced options:


* **-pathway_id**\ : (string, default=rp_pathway) ID of the heterologous pathway
* **-compartment_id**\ : (string, default=MNXC3 (i.e. cytoplasm)) ID of the compartment ID that contains the heterologous pathway
* **-sim_type**\ : (string, default=fraction) Valid options include: fraction, fba, pfba. The type of constraint based modelling method 
* **-source_reaction**\ : (string, default=biomass) Name of the source reaction that will be restricted in the "fraction" simulation type. This parameter is ignored for "fba" and "pfba"
* **-target_reaction**\ : (string, default=RP1_sink) Heterologous pathway flux sink reaction. This parameters is required in all simulation type
* **-source_coefficient**\ : (float, default=1.0) Objective coefficient for the source reaction. This parameter is ignored for "fba" and "pfba"
* **-target_coefficient**\ : (float, default=1.0) Objective coefficient for the target reaction. 
* **-is_max**\ : (boolean, default=True) Maximise or minimise the objective function
* **-fraction_of**\ : (float, default=0.75) Portion of the maximal flux used to set the maximal and minimal bounds for the source reaction of the "fraction" simulation type
* **-dont_merge**\ : (boolean, default=True) Return the merged GEM+heterologous pathway SBML or only the heterologous pathway SBML files

Output
------

* **-output**\ : (string) Path to the output file

Project Links
---------------------

* `GitHub <https://github.com/Galaxy-SynBioCAD/rpFBA>`_

Version
----------

0.1

Authors
-------

* **Melchior du Lac** 

License
-------

`MIT <https://raw.githubusercontent.com/Galaxy-SynBioCAD/rpFBA/standalone-dev/LICENSE>`_

Acknowledgments
---------------


* Thomas Duigou
* Joan HÃ©risson
]]></help>
  <citations>
    <citation type="bibtex">
@article{hucka2016sbml,
  title={SBML Level 3 package: Groups, Version 1 Release 1},
  author={Hucka, Michael and Smith, Lucian P},
  journal={Journal of integrative bioinformatics},
  volume={13},
  number={3},
  pages={8--29},
  year={2016},
  publisher={De Gruyter}
}	
    </citation>
    <citation type="bibtex">
@article{ebrahim2013cobrapy,
  title={COBRApy: COnstraints-based reconstruction and analysis for python},
  author={Ebrahim, Ali and Lerman, Joshua A and Palsson, Bernhard O and Hyduke, Daniel R},
  journal={BMC systems biology},
  volume={7},
  number={1},
  pages={74},
  year={2013},
  publisher={Springer}
}
    </citation>
  </citations>
</tool>
